/*********************************
	작성일 : 2025-04-21
	C++로 파일 읽기
**********************************/

#include <fstream> //-> C++에서 파일 입출력 다룰때 사용하는 표준 헤더파일 포함시킴
//이 헤더를 포함하면 파일을 읽고 쓰기 위한 스트림 클래스인 ifstream, ofstream, fstream를 사용할 수 있음
/*
std:: namespace 사용
ifstream : 입력 파일 스트림 클래스 (파일에서 데이터를 읽을 때 사용)
ofstream : 출력 파일 스트림 클래스(파일에 데이터를 쓸 때 사용)
fstream : 입력과 출력을 모두 처리할 수 있는 파일 스트림 클래스
*/

// 파일 읽기 클래스 std::ifstream
// 예) std::ifstream my_file;  //파일을 읽어 저장하기 위한 my_file 이라는 변수를 선언한 것

#include <iostream> // std::cout, std::cin 사용 시 포함시켜야 함
#include <string> //std::sting 사용 시 포함시켜야 함

int main() {
	std::ifstream my_file; // 입력 파일 스트림 객체 선언
	std::string str; // 파일에서 읽어온 데이터를 저장할 문자열 변수

	// 파일 열기
	my_file.open("test.txt"); 
	// 실행되려면 test.txt라는 파일이 .cpp 파일(소스코드파일)과 같은 위치에 존재해야 함
	// test.txt 파일 만들어 메모장 안에 내용 Hello World!라고 저장해놨음

	/* 
		open()메소드란?
		파일 스트림 객체(std::ifstream)를 생성한 후, 
		특정 시점에 파일을 열고 싶을 때 사용한다. 
		
		<사용 형식>
		파일스트림객체.open("파일이름", 열기모드);
		
		열기 모드는 선택사항(생략시에는 기본값이 자동 적용)
		  |__열기모드(Opening Mode) : 파일을 열 때 파일 스트림 객체가 파일을 어떻게 처리할지를 지정하는 옵션
		  C++에서는 파일을 열 때 std::ifstream(입력용), std::ofstream(출력용), std::fstream(입출력용)을 사용하고 
		  각 클래스는 다양한 열기모드를 설정할 수 있다

		  std::ios::in 입력 모드(입력 스트림 기본값), 파일 읽기 위해 연다(파일 없으면 오류 발생)
		  std::ios::out 출력 모드(출력 스트림 기본값), 파일 쓰기 위해 연다(파일이 없으면 새로 만듬, 기존 파일 존재시 덮어씀)
		  std::ios::out 추가 모드(기존 파일의 끝에 데이터를 추가함, 덮어쓰지 않음)
		  std::ios::binary 이진 모드(이진 형식으로 읽거나 씀)
		  std::ios::in | std::ios::out 읽기/쓰기 모드(입출력 스트림 기본값)
		  std::ios::ate 파일 끝으로 이동하여 커서를 이동시킴
		  열기 모드는 | 로 연결해서 여러 모드를 함께 설정 가능함
	*/

	my_file >> str; //입력스트림객체 my_file이 읽어온 내용을 문자열 변수 str에 저장함

	std::cout << str; //읽어온 str을 콘솔에 출력, my_file.open메서드(입력스트림객체.open메서드가 기본값 입력모드로 가져온)문자열 출력
	// test.txt에는 Hello Word!라고 저장했으나
	// 콘솔에는 Hello만 출력됨
	/* 이유
		위의 코드에서
		open() 메소드는 파일을 여는 역할만 하고 파일을 읽는 동작은 >> 연산자가 했는데
		>> 연산자는 공백(띄어쓰기, 탭, 줄바꿈, 엔터)을 기준으로 데이터를 읽음
		공백 문자를 만나면 그 지점에서 데이터를 읽는 작업을 멈추고 읽은 데이터를 변수에 저장한다
		그래서 Hello Word!에서 Hello만 변수 str에 저장돼서 출력 된 것

		정리) >> 연산자 때문, >> 연산자는 공백 문자를 만나면 공백 이전까지의 문자만 읽어옴
	*/

	/* 해결 
		std::getline() 함수 이용하기
		std::getline()은 C++에서 파일이나 콘솔 입력을 한 줄씩 읽는 함수로 
		이 함수는 공백, 탭 등을 포함한 전체 한 줄을 읽을 수 있다
		줄바꿈(\n)을 기준으로 잘라서 한 줄씩 읽어옴

		<사용법>
		std::getline(입력스트림, 문자열변수);
			|__ 입력스트림: 읽어올 입력 스트림 객체, 문자열변수: 읽어온 데이터를 저장할 변수

		std::getline()은 파일이나 표준 입력에서 한 줄을 읽어서 문자열로 저장
		공백이나 탭도 포함된 전체 라인을 읽는다
		줄 끝에 있는 줄 바꿈 문자(\n)는 자동으로 제거함

		한 줄씩 읽는 함수이므로, 파일 전체를 읽어오려면 반복문을 사용해야 한다
	*/

	// 파일 전체 출력하기
	while (std::getline(my_file, str)) { //my_file(입력스트림객체)을 한 줄씩 읽어서 변수 str에 저장함 
		//파일 끝에 도달하면 std::getline(my_file, str)가 false를 반환(반복문 종료)
		std::cout << str << std::endl; //std::getline(my_file, str)이 false가 될 때까지 반복 실행
		// my_file에서 읽어온 문자열 출력(줄 끝에 있는 줄바꿈 문자는 생략해서 가져오므로
		// std::endl를 따로 추가함)
	}

	//파일을 닫음.
	my_file.close();

	return 0;
}